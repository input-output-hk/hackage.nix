{ system
, compiler
, flags
, pkgs
, hsPkgs
, pkgconfPkgs
, ... }:
  {
    flags = {};
    package = {
      specVersion = "1.10";
      identifier = {
        name = "chronologique";
        version = "0.2.1.0";
      };
      license = "BSD-3-Clause";
      copyright = "Â© 2016-2017 Operational Dynamics Consulting Pty Ltd, and Others";
      maintainer = "Andrew Cowie <andrew@operationaldynamics.com>";
      author = "Andrew Cowie <andrew@operationaldynamics.com>";
      homepage = "";
      url = "";
      synopsis = "Time to manipulate time";
      description = "A simple type useful for representing timestamps as generated by system\nevents, along with conveniences for converting between time types from common\nHaskell time libraries.\n\nOur original use was wanting to conveniently measure things happening on\ndistributed computer systems. Since machine clock cycles are in units of\nnanoseconds, this has the nice property that, assuming the system clock is not\ncorrupted, two subsequent events from the same source process are likely to\nhave monotonically increasing timestamps. And even if the system clock has\nskew, they're still decently likely to be unique per device. These TimeStamps\nthus make good keys when building Maps.\n\nThe core type is in \"Chrono.TimeStamp\", see there for full documentation.";
      buildType = "Simple";
    };
    components = {
      "library" = {
        depends  = [
          (hsPkgs.base)
          (hsPkgs.time)
          (hsPkgs.hourglass)
        ];
      };
      tests = {
        "experiment" = {
          depends  = [
            (hsPkgs.base)
            (hsPkgs.chronologique)
          ];
        };
        "check" = {
          depends  = [
            (hsPkgs.base)
            (hsPkgs.hspec)
            (hsPkgs.hourglass)
            (hsPkgs.QuickCheck)
            (hsPkgs.chronologique)
          ];
        };
      };
    };
  }