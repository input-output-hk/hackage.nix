{ system
  , compiler
  , flags
  , pkgs
  , hsPkgs
  , pkgconfPkgs
  , errorHandler
  , config
  , ... }:
  {
    flags = {};
    package = {
      specVersion = "3.0";
      identifier = { name = "ollama-holes-plugin"; version = "0.1.0.0"; };
      license = "MIT";
      copyright = "2025- Matthias Pall Gissurarson  ";
      maintainer = "Matthias Pall Gissurarson <mpg@mpg.is>";
      author = "Matthias Pall Gissurarson <mpg@mpg.is>";
      homepage = "https://github.com/Tritlo/OllamaHoles";
      url = "";
      synopsis = "A typed-hole plugin that uses LLMs via Ollama to generate valid hole-fits";
      description = "This package provides a GHC plugin that uses LLMs via Ollama to generate valid hole-fits.\n.\nThe following flags are available:\n.\nTo specify the model to use:\n.\n> -fplugin-opt=GHC.Plugin.OllamaHoles:model=<model_name>\n.\nTo specify how many fits to generate (passed to the model)\n.\n> -fplugin-opt=GHC.Plugin.OllamaHoles:n=5\n.\nTo enable debug output:\n.\n> -fplugin-opt=GHC.Plugin.OllamaHoles:debug=True\n.\nBefore using this plugin, make sure you have the Ollama CLI installed and the model\nyou want to use is available. You can install the Ollama CLI by following the\ninstructions at [https://ollama.com/download](https://ollama.com/download),\nand you can install the default model (gemma3:27b) by running `ollama pull gemma3:27b`.\n.\nNote that the speed and quality of the hole-fits generated by the plugin depends on\nthe model you use, and the default model requires a GPU to run efficiently.\nFor a smaller model, we suggest `gemma3:4b-it-qat`, or `deepcoder:1.5b`.";
      buildType = "Simple";
    };
    components = {
      "library" = {
        depends = [
          (hsPkgs."base" or (errorHandler.buildDepError "base"))
          (hsPkgs."ghc" or (errorHandler.buildDepError "ghc"))
          (hsPkgs."ollama-haskell" or (errorHandler.buildDepError "ollama-haskell"))
          (hsPkgs."text" or (errorHandler.buildDepError "text"))
        ];
        buildable = true;
      };
    };
  }